name: Run OmniThinker on Tag

on:
  issue_comment:
    types: [created]

jobs:
  run:
    if: contains(github.event.comment.body, '@omnithinker:')
    runs-on: ubuntu-latest  # Required host OS, container runs on top
    container:
      image: continuumio/miniconda3:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Conda and Set Python 3.11
        run: |
          conda update -n base conda -y
          conda create -n OmniThink python=3.11 -y

      - name: Install requirements
        run: |
          conda run -n OmniThink pip install -r requirements.txt

      - name: Extract Topic
        run: |
          COMMENT_BODY="${{ github.event.comment.body }}"
          TOPIC=$(python -c "import sys; body = sys.argv[1]; print(body.split('@omnithinker:')[1].strip() if '@omnithinker:' in body else '')" "$COMMENT_BODY")
          echo "TOPIC=$TOPIC" >> $GITHUB_ENV

      - name: Fetch Context
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          REPO=${{ github.event.repository.full_name }}
          API_URL="https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER"
          CONTEXT=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$API_URL" | jq -r '.title + " " + (.body // "")')
          echo "CONTEXT=$CONTEXT" >> $GITHUB_ENV

      - name: Set Final Topic
        run: |
          FINAL_TOPIC="Context: ${CONTEXT}\nQuestion: ${TOPIC}\nGenerate an article based on this context and question."
          echo "FINAL_TOPIC=$FINAL_TOPIC" >> $GITHUB_ENV

      - name: Run OmniThinker
        env:
          LM_KEY: ${{ secrets.LM_KEY }}
          SEARCHKEY: ${{ secrets.SEARCHKEY }}
        run: |
          conda run -n OmniThink python src/omni_think.py "${FINAL_TOPIC}"

      - name: Post Article as Comment
        run: |
          ARTICLE=$(cat results/article.md)
          PAYLOAD=$(jq -n --arg body "$ARTICLE" '{body: $body}')
          curl -s -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -d "$PAYLOAD" "https://api.github.com/repos/${{ github.event.repository.full_name }}/issues/${{ github.event.issue.number }}/comments"

      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: omnithink_results
          path: results/*
